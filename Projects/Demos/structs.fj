struct X {
	one = "1"; // to show that structs can hold different types

	struct Y {
		num = 1111;
		// err = new X(); --- returns an error - you can't construct the containing struct
		def msg() { sysout!("omega"); } // c is added as a member variable
	}
}

a = new X.Y(9999).num; // accessing r-values is possible, alongside nested structs
sysln!(a); // prints '9999'
b = new X.Y(7, msg="alpha"); // see functions = first class variables, and arg selection
sysln!(b.msg); // prints 'alpha'
c = new X.Y();
c.msg(); // prints 'omega'

